{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from \"flatpickr\";  \nimport iziToast from \"izitoast\";\n\nlet userSelectedDate;\nconst datetimeBtn = document.querySelector('.datetime-btn');\nconst startBtn = document.querySelector('[data-start]'); // <--- Знайшли кнопку Start\n\nconst flatpickrOptions = {\n    enableTime: true,\n    time_24hr: true,\n    defaultDate: new Date(),  \n    minuteIncrement: 1,\n    onClose(selectedDates) {\n        userSelectedDate = selectedDates[0];\n        const currentDate = checkDate(); // отримуємо поточну дату з функції\n        if (currentDate) {  // перевірка, чи дійсно поточна дата правильна\n            startBtn.removeAttribute(\"disabled\"); // <--- Активуємо кнопку Start після вибору дати\n        }\n    },\n};\n\nconst iziToastOptions = {\n    title: \"Error\",\n    titleColor: '#fff',\n    titleSize: \"16px\",\n    titleLineHeight: \"1.5\",\n    message: \"Illegal operation\",\n    backgroundColor: \"#ef4040\",\n    color: \"white\",\n    messageColor: \"#fff\",\n    messageSize: \"16px\",\n    messageLineHeight: \"1.5\",\n    iconUrl: new URL('../img/error.svg', import.meta.url).href,\n    iconColor: \"#fff\",\n    close: true,\n    closeOnEscape: true,\n    progressBarColor: \"#b51b1b\",\n    position: \"topRight\",\n    timeout: 5000,\n    animateInside: false,\n    transitionIn: \"bounceInLeft\"\n};\n\nflatpickr(\"#datetime-picker\", flatpickrOptions);\n\nfunction checkDate() {\n    const currentDate = new Date();\n    if (userSelectedDate <= currentDate) {\n        datetimeBtn.setAttribute(\"disabled\", \"disabled\");\n        iziToast.show(iziToastOptions);\n        return false; // неправильна дата\n    } else {\n        datetimeBtn.removeAttribute(\"disabled\");\n        return currentDate; // повертаємо поточну дату\n    }\n}\n\n// <--- Видаляємо currentDate із параметра функції, таймер буде запускатися лише після натискання кнопки\nfunction startTimer() {\n    const currentDate = new Date(); // Поточний час в момент натискання кнопки \"Start\"\n    const timeTimer = userSelectedDate - currentDate;\n\n    const secondsEl = document.querySelector(\"[data-seconds]\");\n    const minutesEl = document.querySelector(\"[data-minutes]\");\n    const hoursEl = document.querySelector(\"[data-hours]\");\n    const daysEl = document.querySelector(\"[data-days]\");\n\n    let timeLeft = timeTimer;\n\n    setDate();\n    const datetimeInput = document.querySelector('.datetime-input');\n    datetimeInput.setAttribute(\"disabled\", \"disabled\");\n    datetimeBtn.setAttribute(\"disabled\", \"disabled\");\n\n    const timer = setInterval(() => {\n        timeLeft -= 1000;\n\n        if (timeLeft <= 0) {// зупиняємо таймер\n            secondsEl.textContent = \"00\";\n            minutesEl.textContent = \"00\";\n            hoursEl.textContent = \"00\";\n            daysEl.textContent = \"00\";\n            datetimeInput.removeAttribute(\"disabled\");\n        } else {\n            setDate();\n        }\n    }, 1000);\n\n    function setDate() {\n        const timeTimerObject = convertMs(timeLeft);\n        const { days, hours, minutes, seconds } = timeTimerObject;\n        secondsEl.textContent = seconds;\n        minutesEl.textContent = minutes;\n        hoursEl.textContent = hours;\n        daysEl.textContent = days;\n    }\n}\n\nfunction convertMs(ms) {\n    // Кількість мілісекунд в одиниці часу\n    const second = 1000;\n    const minute = second * 60;\n    const hour = minute * 60;\n    const day = hour * 24;\n\n    // Дні\n    const days = String(Math.floor(ms / day)).padStart(2, \"0\");\n    // Години\n    const hours = String(Math.floor((ms % day) / hour)).padStart(2, \"0\");\n    // Хвилини\n    const minutes = String(Math.floor(((ms % day) % hour) / minute)).padStart(2, \"0\");\n    // Секунди\n    const seconds = String(Math.floor((((ms % day) % hour) % minute) / second)).padStart(2, \"0\");\n\n    return { days, hours, minutes, seconds };\n}\n\n// <--- Додаємо слухач події на кнопку старту\nstartBtn.addEventListener(\"click\", () => startTimer());  // Запускає таймер при натисканні кнопки\n"],"names":["userSelectedDate","datetimeBtn","startBtn","flatpickrOptions","selectedDates","checkDate","iziToastOptions","flatpickr","currentDate","iziToast","startTimer","timeTimer","secondsEl","minutesEl","hoursEl","daysEl","timeLeft","setDate","datetimeInput","timeTimerObject","convertMs","days","hours","minutes","seconds","ms"],"mappings":"+IAGA,IAAIA,EACJ,MAAMC,EAAc,SAAS,cAAc,eAAe,EACpDC,EAAW,SAAS,cAAc,cAAc,EAEhDC,EAAmB,CACrB,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACnBJ,EAAmBI,EAAc,CAAC,EACdC,KAEhBH,EAAS,gBAAgB,UAAU,CAE1C,CACL,EAEMI,EAAkB,CACpB,MAAO,QACP,WAAY,OACZ,UAAW,OACX,gBAAiB,MACjB,QAAS,oBACT,gBAAiB,UACjB,MAAO,QACP,aAAc,OACd,YAAa,OACb,kBAAmB,MACnB,QAAS,IAAA,IAAA,q3FAAA,YAAA,GAAA,EAA6C,KACtD,UAAW,OACX,MAAO,GACP,cAAe,GACf,iBAAkB,UAClB,SAAU,WACV,QAAS,IACT,cAAe,GACf,aAAc,cAClB,EAEAC,EAAU,mBAAoBJ,CAAgB,EAE9C,SAASE,GAAY,CACjB,MAAMG,EAAc,IAAI,KACxB,OAAIR,GAAoBQ,GACpBP,EAAY,aAAa,WAAY,UAAU,EAC/CQ,EAAS,KAAKH,CAAe,EACtB,KAEPL,EAAY,gBAAgB,UAAU,EAC/BO,EAEf,CAGA,SAASE,GAAa,CAElB,MAAMC,EAAYX,EADE,IAAI,KAGlBY,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAY,SAAS,cAAc,gBAAgB,EACnDC,EAAU,SAAS,cAAc,cAAc,EAC/CC,EAAS,SAAS,cAAc,aAAa,EAEnD,IAAIC,EAAWL,EAEfM,IACA,MAAMC,EAAgB,SAAS,cAAc,iBAAiB,EAC9DA,EAAc,aAAa,WAAY,UAAU,EACjDjB,EAAY,aAAa,WAAY,UAAU,EAEjC,YAAY,IAAM,CAC5Be,GAAY,IAERA,GAAY,GACZJ,EAAU,YAAc,KACxBC,EAAU,YAAc,KACxBC,EAAQ,YAAc,KACtBC,EAAO,YAAc,KACrBG,EAAc,gBAAgB,UAAU,GAExCD,GAEP,EAAE,GAAI,EAEP,SAASA,GAAU,CACf,MAAME,EAAkBC,EAAUJ,CAAQ,EACpC,CAAE,KAAAK,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,EAAKL,EAC1CP,EAAU,YAAcY,EACxBX,EAAU,YAAcU,EACxBT,EAAQ,YAAcQ,EACtBP,EAAO,YAAcM,CACxB,CACL,CAEA,SAASD,EAAUK,EAAI,CAQnB,MAAMJ,EAAO,OAAO,KAAK,MAAMI,EAAK,KAAG,CAAC,EAAE,SAAS,EAAG,GAAG,EAEnDH,EAAQ,OAAO,KAAK,MAAOG,EAAK,MAAO,IAAI,CAAC,EAAE,SAAS,EAAG,GAAG,EAE7DF,EAAU,OAAO,KAAK,MAAQE,EAAK,MAAO,KAAQ,GAAM,CAAC,EAAE,SAAS,EAAG,GAAG,EAE1ED,EAAU,OAAO,KAAK,MAASC,EAAK,MAAO,KAAQ,IAAU,GAAM,CAAC,EAAE,SAAS,EAAG,GAAG,EAE3F,MAAO,CAAE,KAAAJ,EAAM,MAAAC,EAAO,QAAAC,EAAS,QAAAC,CAAO,CAC1C,CAGAtB,EAAS,iBAAiB,QAAS,IAAMQ,EAAY,CAAA"}